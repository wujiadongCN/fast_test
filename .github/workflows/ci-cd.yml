name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    env:
      # 你的应用里读取这个即可
      REDIS_URL: redis://localhost:6379/0
      ENVIRONMENT: test
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # 开发/CI工具放这里装，避免污染你的运行时镜像
          pip install pytest pytest-cov ruff black

      - name: Show versions
        run: |
          python -V
          pip -V
          pytest --version
          ruff --version
          black --version

      - name: Code style (Black check)
        run: |
          black --check --diff .

      - name: Lint (Ruff check)
        run: |
          # 既做导入顺序(isort规则)，也做lint
          ruff check .

      - name: Run tests
        env:
          # 测试阶段也显式设置一次
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=term-missing
